from datetime import datetime

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from bot_classes import SuperTest


def get_super_test_actions_keyb(stest: SuperTest) -> InlineKeyboardMarkup:
    stest_id = stest.id
    buttons = [
        [
            InlineKeyboardButton(text="–ü—Ä–æ–¥–ª–∏—Ç—å", callback_data=f"extend_test_{stest_id}"),
            InlineKeyboardButton(text="–ó–∞–∫–æ–Ω—á–∏—Ç—å", callback_data=f"finish_test_{stest_id}")
        ],
        [
            InlineKeyboardButton(text="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã", callback_data=f"results_{stest_id}"),
            InlineKeyboardButton(text="–°—Å—ã–ª–∫–∞", callback_data=f"link_{stest_id}")
        ],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_supertests")]
    ]
    #  –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ—Å—Ç–∞, –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ—Å—Ç–∞ –º–µ–Ω—å—à–µ —á–µ–º –Ω–∞—Å—Ç–æ—è—â–µ–µ
    if stest.end_date <= datetime.now():
        buttons[0].pop(1)

    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_cancel_edit_keyb(stest_id):
    buttons = [
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=f"super_test_{stest_id}")]
    ]
    keyb = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyb

def get_results_var_keyb(stest_id):
    buttons = [
        [InlineKeyboardButton(text="Excel", callback_data=f"export_excel_{stest_id}")],
        [InlineKeyboardButton(text="–í —Å–æ–æ–±—â–µ–Ω–∏–∏", callback_data=f"export_msg_{stest_id}")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=f"super_test_{stest_id}")]
    ]
    keyb = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyb

